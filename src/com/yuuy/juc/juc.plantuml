@startuml

title __JUC's Class Diagram__\n

  namespace com.yuuy.juc {
    class com.yuuy.juc.BlockingQueueDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.CallableDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.CollectionNotSafe {
        {static} + listNotSafe()
        {static} + main()
        {static} + setNotSafe()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.CompletableFutureDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.CountDownLatchDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.CyclicBarrierDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.EightLock {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.ForkJoinDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.MyCache {
        - map : Map<String, Object>
        - readWriteLock : ReadWriteLock
        + get()
        + put()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.MyTask {
        - N : int
        + MyTask()
        # compute()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.MyThread {
        + call()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.ReadWriteLockDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.Resource {
        - conditionA : Condition
        - conditionB : Condition
        - conditionC : Condition
        - lock : Lock
        - state : int
        + printA()
        + printB()
        + printC()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.Screen {
        {static} ~ showFlower()
        ~ showPeople()
        ~ welcome()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.SellTickets {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.SemaphoreDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.SharingData {
        - condition : Condition
        - lock : Lock
        - state : int
        + decrement()
        + increment()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.ThreadOrderAccess {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.ThreadPoolExecutorDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.ThreadWaitNotifyDemo {
        {static} + main()
    }
  }
  

  namespace com.yuuy.juc {
    class com.yuuy.juc.Ticket {
        - lock : Lock
        - rest : int
        + sell()
    }
  }
  

  com.yuuy.juc.MyTask -up-|> java.util.concurrent.RecursiveTask
  com.yuuy.juc.MyThread .up.|> java.util.concurrent.Callable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
